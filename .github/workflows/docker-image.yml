name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./blue/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
        # we need qemu and buildx so we can build multiple platforms later
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3.0.0

        # BuildKit (used with `docker buildx`) is the best way to build images
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3


      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GIT_USERNAME }}
          password: ${{ secrets.GH_SIMPLE }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3.3.0
        with:
          # list of Docker images to use as base name for tags
          images: |
             itlinux/simple-argo
             ghcr.io/itlinux/simple-argo
          flavor: |
            latest=false
          tags:
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # I don't push during a pull_request, only build
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}


